---
# ./playbook.sh rollback-autoscaling-elb.yml -e project=manhattan -e role=app -e env=production
#
# Reverses changes made by `cutover-autoscaling-cluster.yml` to effect rollback
# of a deployment.

- hosts: localhost
  connection: local

  pre_tasks:

    - name: Validate arguments
      assert:
        that:
          - env is defined
          - project is defined
          - role is defined
        msg: "Missing required arguments: env and/or project and/or role"

  tasks:

    - name: Identify the live stage group
      ec2_asg_facts:
        tags:
          env: "{{ env }}"
          project: "{{ project }}"
          role: "{{ role }}"
          stage: live
      register: current_group
      failed_when: current_group.results | length != 1
      tags: find

    - name: Identify the post stage group
      ec2_asg_facts:
        tags:
          env: "{{ env }}"
          project: "{{ project }}"
          role: "{{ role }}"
          stage: post
      register: new_group
      failed_when: new_group.results | length != 1
      tags: find


- hosts: localhost
  connection: local

  tasks:

    - name: Perform rollback from post to live, and live to pre
      ec2_asg_cutover_elb:
        current_group_name: "{{ current_group.results[0].auto_scaling_group_name }}"
        new_group_name: "{{ new_group.results[0].auto_scaling_group_name }}"
      tags: cutover

    - name: Tag the live stage group
      ec2_asg:
        region: "{{ region }}"
        name: "{{ new_group.results[0].auto_scaling_group_name }}"
        health_check_type: "{{ new_group.results[0].health_check_type }}" # required to prevent resetting to the default
        tags: "{{ new_group.results[0].tags | format_asg_tags | symmetric_difference(new_group.results[0].tags | format_asg_tags | selectattr('stage', 'defined') | list) | union([{'stage': 'live', 'propagate_at_launch': False}]) }}"
      tags: tag

    - name: Tag the pre stage group
      ec2_asg:
        region: "{{ region }}"
        name: "{{ current_group.results[0].auto_scaling_group_name }}"
        health_check_type: "{{ current_group.results[0].health_check_type }}" # required to prevent resetting to the default
        tags: "{{ current_group.results[0].tags | format_asg_tags | symmetric_difference(current_group.results[0].tags | format_asg_tags | selectattr('stage', 'defined') | list) | union([{'stage': 'pre', 'propagate_at_launch': False}]) }}"
      tags: tag


# vim: set ft=ansible ts=2 sts=2 sw=2 expandtab:
